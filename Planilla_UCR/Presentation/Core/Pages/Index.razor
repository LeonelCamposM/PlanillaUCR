@page "/{email}"
@using Presentation.Authentication
@using Presentation.Shared
@using Presentation.Core.Layout
@using Presentation
@inject NavigationManager nav

<Authenticator email="@email" SendAuthenticationState="ReceiveAuthenticationState"> </Authenticator>
@if (_loading)
{
    <MudText> loading</MudText>
}
else
{
    if (authenticationState == true && _loading == false)
    {
        //Authorized
        <MudText>Visión del producto para @email</MudText>
    }
    else
    {
        //Unauthorized
        nav.NavigateTo("/Visitor");
    }
}

@code{
    bool _loading = true;
    bool authenticationState = false;
    private int currentCount = 0;

    [Parameter]
    public string email { get; set; }

    [CascadingParameter]
    protected EventCallback<string> setEmail { get; set; }

    public async Task ReceiveAuthenticationState(bool state)
    {
        authenticationState = state;
        _loading = false;
        await setEmail.InvokeAsync(email);
    }
}