@page "/CreateProject"
@using Domain.Projects.DTOs
@using Domain.Projects.Entities
@using Application.Projects
@using Presentation.Projects.Models
@using Presentation.Core.Components

@inject IProjectService ProjectService
@inject ISnackbar Snackbar


@*@if (_created)
{
    ShowSnackNotification("Proyecto establecido", Severity.Success);
}*@

@{
    List<BreadcrumbItem> _items = new List<BreadcrumbItem>
    {
        new BreadcrumbItem("Inicio", href: "#"),
        new BreadcrumbItem("Proyectos", href: "#"),
        new BreadcrumbItem("Crear Proyecto nuevo", href: "#"),
    };
}
 <MudBreadcrumbs Items="_items" Separator=">"></MudBreadcrumbs>

<MudGrid>
    <MudItem xs="10" sm="12">
        <MudPaper  Height="220px" Width="100%" Outlined="false " Class="border-none pa-4" Elevation="0">
            <MudForm @ref="form">
                <MudText Align="Align.Center" Typo="Typo.h6">Crear Proyecto</MudText>
                <MudGrid>

                <MudItem xs="8">
                    <MudTextField @bind-Value="ProjectInfo.ProjectName" 
                    Label="Nombre del Proyecto" Variant="Variant.Outlined"  
                    Required="true" RequiredError="El nombre de proyecto es necesario">
                    </MudTextField>
                </MudItem>

                <MudDivider />
                <MudItem xs="2"> </MudItem>
                <MudItem xs="8">
                    <MudTextField @bind-Value="ProjectInfo.EmployerEmail" 
                    Label="Email del Empleador" Variant="Variant.Outlined"
                    Required="true" RequiredError="Campo requerido"></MudTextField>
                </MudItem>

                <MudDivider />
                <MudItem xs="2"> </MudItem>
                <MudItem xs="8">
                    <MudTextField @bind-Value="ProjectInfo.ProjectDescription" 
                    Label="Descripción del Proyecto" Variant="Variant.Outlined"></MudTextField>
                </MudItem>
                
                <MudDivider />
                <MudItem xs="2"> </MudItem>
                <MudItem xs="8">
                    <MudSelect @bind-Value="ProjectInfo.PaymentInterval" Label="Intervalo de pago" Variant="Variant.Outlined">
                        <MudSelectItem Value="@("Quincenal")">Pago Quincenal</MudSelectItem>
                        <MudSelectItem Value="@("Mensual")">Pago Mensual</MudSelectItem>
                        <MudSelectItem Value="@("Semanal")">Pago Semanal</MudSelectItem>
                        <MudSelectItem Value="@("Bisemanal")">Pago Bisemanal</MudSelectItem>
                    </MudSelect>
                </MudItem>

                <MudDivider />
                <MudItem xs="2"> </MudItem>
                <MudItem xs="4">
                    <MudTextField @bind-Value="ProjectInfo.MaximumAmountForBenefits"  
                    Label="Monto máximo de beneficios" Variant="Variant.Outlined"></MudTextField>
                </MudItem>

                <MudDivider />
                <MudItem xs="4">
                    <MudTextField @bind-Value="ProjectInfo.MaximumAmountForBenefits"  
                    Label="Monto máximo de beneficios" Variant="Variant.Outlined"></MudTextField>
                </MudItem>
           
                @*Create buton *@
                <MudDivider />
                <MudItem xs="6">
                    <MudButton Disabled="@snackHandler._saving" OnClick="CreateProject" 
                    Variant="Variant.Filled" Color="Color.Secondary">
                        @if (snackHandler._saving)
                        {
                            <MudProgressCircular Class="ms-n1" Size="Size.Small" Indeterminate="true"/>
                            <MudText Class="ms-2">Creando</MudText>
                        }
                        else
                        {
                            <MudText>Crear</MudText>
                        }
                    </MudButton>

                    <MudButton Disabled="true"> </MudButton>

                    <MudButton OnClick="CleanForm" Variant="Variant.Filled" Color="Color.Transparent">
                        <MudText>Cancelar</MudText>
                    </MudButton>
                </MudItem>
                </MudGrid>
            </MudForm>
        </MudPaper>
    </MudItem>
</MudGrid>

@code{
    public string project { get; set; }
    private bool _isLoading = true;
    private bool _processing = false;

    SnackHandler snackHandler = new SnackHandler();
    Project ProjectInfo = new Project("www@dad","Prueba","",Int32.Parse("0"),Int32.Parse("0"),"");
    MudForm form;

    private List<BreadcrumbItem> _items = new List<BreadcrumbItem>
    {
        new BreadcrumbItem("Home", href: ""),
        new BreadcrumbItem("Proyectos", href: "project"),
        new BreadcrumbItem("Crear proyecto nuevo", href: "newproject")
    };


    async Task CreateProject()
    {
        snackHandler._saving = true;
        await ProjectService.CreateProjectAsync(ProjectInfo);
        ShowSnackNotification(ProjectInfo.ProjectName+" creado", Severity.Success);
        //await form.Validate();
        //if (form.IsValid)
        //{
        //    await ProjectService.CreateProjectAsync(ProjectInfo);
        //    snackHandler._saving = false;
        //    ShowSnackNotification(ProjectInfo.ProjectName+" creado", Severity.Success);
        //    CleanForm();
        //}
       
        snackHandler._saving = false;
    }

    void ShowSnackNotification(string message, Severity severity)
    {
        Snackbar.Configuration.SnackbarVariant = Variant.Filled;
        Snackbar.Configuration.PreventDuplicates = false;
        Snackbar.Configuration.MaxDisplayedSnackbars = 10;
        Snackbar.Configuration.NewestOnTop = true;
        Snackbar.Add($"{message}", severity, config =>
        {
            config.RequireInteraction = false;
            config.ShowCloseIcon = true;
            config.Onclick = snackbar =>
            {
                return Task.CompletedTask;
            };
        });
    }


    void CleanForm()
    {
        ProjectInfo.ProjectName = "";
        ProjectInfo.EmployerEmail = "";
        ProjectInfo.ProjectDescription = "";
        ProjectInfo.MaximumBenefitAmount= 0;
        ProjectInfo.MaximumAmountForBenefits = 0;
        ProjectInfo.PaymentInterval = "";
    }
     
}