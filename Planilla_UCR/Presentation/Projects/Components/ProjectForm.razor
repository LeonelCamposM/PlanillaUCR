@page "/projects"
@using Domain.Employees.DTOs
@using Application.Employees
@using Domain.Employees.Entities
@using Presentation.Core.Components

@using Domain.Projects.DTOs
@using Application.Projects
@using Domain.Projects.Entities

@inject IEmployeeService EmployeeService
@inject IProjectService ProjectService

<div class="container">
    <h1>Projects</h1>
    <Loading IsLoading="_isLoading">
        @if (_isLoading)
        {
            <h4 class="text-danger">There are no projects currently registered.</h4>
        }
        else
        {
            <table>
                    <tr>
                        <td><strong>Id</strong></td>
                        <td><strong>Project name</strong></td>
                        <td><strong>Number of publications</strong></td>
                        <td><strong>Investigation Group name</strong></td>
                    </tr>

                    @*@foreach (var project in _projects)
                    {
                        <tr>
                            <td align="center">@project.Id</td>
                            <td align="center">@project.Project_Name</td>
                            <td align="center">@project.Publication</td>
                            <td align="center">@project.Group</td>
                        </tr>
                    }*@
            </table>
        }
    </Loading>
</div>

@code {
    // private IEnumerable<ProjectDTO> _projects;

    private bool _isLoading = true;
    protected override async Task OnInitializedAsync()
    {
        String name = "Le"; 
        String email = "Leone";
        int id = 202220222;
        String bankAccount = "cuentaBa";

        await EmployeeService.CreateEmployeeAsync(email, id, name, bankAccount);
        // _projects = await ProjectService.GetAllProjectsAsync();

        _isLoading = false;
    }
}
