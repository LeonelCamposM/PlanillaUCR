@inject NavigationManager nav


<MudPaper  Height="320px" Width="100%" Outlined="true" Class="pa-32" Elevation="25">  
    <MudToolBar>
            <MudButton OnClick="SendConmuteSignal"> Empleados contratados </MudButton>
            <MudButton Color="Color.Tertiary" > Contratar Empleados </MudButton>
            <MudSpacer />
            <MudTextField @bind-Value="searchString1" Placeholder="Search" Adornment="Adornment.Start" AdornmentIcon="@Icons.Material.Filled.Search" IconSize="Size.Medium" Class="mt-0"></MudTextField>
    </MudToolBar> 

    <MudPaper Height="60px" Width="100%" Outlined="false" Class="border-none" Elevation="0"> 
    </MudPaper>
    <br />
    <MudText Align="Align.Center" Typo="Typo.h5">No hay empleados registrados</MudText>
    <br />
    <MudToolBar DisableGutters="true" Class="gap-4">
        <MudButton></MudButton>
        <MudSpacer></MudSpacer>
        <MudButton Variant="Variant.Filled" OnClick="GoToCreateEmployee" Color="Color.Primary">
        <MudText>
        Registrar Empleados
        </MudText> 
        </MudButton>
        <MudSpacer></MudSpacer>
        <MudButton></MudButton>
    </MudToolBar>
</MudPaper>

@code {
    [Parameter]
    public string email {get; set;}
    [Parameter]
    public string projectName {get; set;}

    [Parameter]
    public EventCallback<string> SendTableState { get; set; }

     string searchString1 = "";

   private void GoToCreateEmployee()
    {
        nav.NavigateTo($"/Create_Employee/{email}/{projectName}");
    }

    private async Task SendConmuteSignal()
    {
        await SendTableState.InvokeAsync("");
    }
}
