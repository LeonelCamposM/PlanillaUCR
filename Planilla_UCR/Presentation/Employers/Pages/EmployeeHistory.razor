@page "/Reports/{employerEmail}/Employee_History"
@using Domain.Agreements.Entities
@using Domain.People.Entities
@using Domain.Projects.Entities
@using Domain.Payments.Entities
@using Application.Agreements
@using Application.People
@using Application.Projects
@using Application.Payments
@using Presentation.Employers.Models
@using System.Globalization


@inject NavigationManager nav
@inject ISnackbar Snackbar

@inject IPersonService PersonService
@inject IProjectService ProjectService
@inject IAgreementService AgreementService
@inject IPaymentService PaymentService

@{
    List<BreadcrumbItem> _items = new List<BreadcrumbItem>
    {
        new BreadcrumbItem("Inicio", href: ""),
        new BreadcrumbItem("Histórico de empleados",  href: null, disabled: true),

    };
}

@if (_loading)
{
    <MudPaper  Height="220px" Width="100%" Outlined="false" Class="border-none pa-4" Elevation="0">
            <MudText Align="Align.Center" Typo="Typo.h6">
                <MudProgressCircular Color="Color.Primary" Style="height:70px;width:70px;" Indeterminate="true" />
            </MudText>
    </MudPaper>
}
else
{
    @if (_emptyHistory)
    {
        <MudText Typo="Typo.h6" Align="Align.Center">No existen registros de pagos para ningún empleado.
        </MudText>
    }
    else
    {
        <MudBreadcrumbs Items="_items" Separator=">"></MudBreadcrumbs>
        

        <MudTable Style="pt-6" @ref="@_table" Items="@_joinTable" RowsPerPage="4" Hover="true" Breakpoint="Breakpoint.Sm" Loading="@_emptyHistory" LoadingProgressColor="Color.Primary">  

            <ColGroup>
                <col style="width: 50%;" />
                <col style="width: 60px;" />
                <col style="width: 60px;" />
                <col style="width: 60px;" />
                <col style="width: 60px;" />
                <col style="width: 60px;" />
                <col style="width: 60px;" />
                <col style="width: 60px;" />
                <col style="width: 60px;" />
                <col style="width: 60px;" />
            </ColGroup>
            <ToolBarContent>
                <MudText Align="Align.Center" Typo="Typo.h6">Histórico de empleados</MudText>
                <MudSpacer></MudSpacer>
            </ToolBarContent>

            <HeaderContent>
                <MudTh Style="text-align:justify-all">Nombre</MudTh>
                <MudTh Style="text-align:justify-all">Proyecto</MudTh>
                <MudTh Style="text-align:justify-all">Cédula</MudTh>
                <MudTh Style="text-align:justify-all">Tipo de empleado</MudTh>
                <MudTh Style="text-align:justify-all">Salario bruto</MudTh>
                <MudTh Style="text-align:justify-all">Beneficios</MudTh>
                <MudTh Style="text-align:justify-all">Cargas sociales empleador</MudTh>
                <MudTh Style="text-align:justify-all">Deducciones obligatorias empleado</MudTh>
                <MudTh Style="text-align:justify-all">Deducciones voluntarias</MudTh>
                <MudTh Style="text-align:justify-all">Costo empleador</MudTh>

            </HeaderContent>

            <RowTemplate Context="row">
                <MudTd DataLabel="employeeName" Style="text-align:justify-all">@row.EmployeeName @row.EmployeeLastName1 @row.EmployeeLastName2</MudTd>
                <MudTd DataLabel="projectName" Style="text-align:justify-all">@row.ProjectName</MudTd>
                <MudTd DataLabel="ssn" Style="text-align:justify-all">@row.Ssn</MudTd>
                <MudTd DataLabel="contractType" Style="text-align:justify-all">@row.ContractType</MudTd>
                <MudTd DataLabel="grossSalary" Style="text-align:justify-right">₡@row.GrossSalary</MudTd>
                <MudTd DataLabel="totalBenefits" Style="text-align:right">₡@row.TotalBenefits</MudTd>
                <MudTd DataLabel="employerSocialCharges" Style="text-align:right" >₡@row.EmployerSocialCharges</MudTd>
                <MudTd DataLabel="mandatoryEmployeeDeductions" Style="text-align:right" >₡@row.MandatoryEmployeeDeductions</MudTd>
                <MudTd DataLabel="voluntaryDeductions" Style="text-align:right" >₡@row.VoluntaryDeductions</MudTd>
                <MudTd DataLabel="employeeCost" Style="text-align:right" >₡@row.EmployeeCost</MudTd>
            </RowTemplate>

            <PagerContent>
                    <MudPagination SelectedChanged="PageChanged" Count="@((_table.GetFilteredItemsCount() + _table.RowsPerPage - 1) / _table.RowsPerPage)" Color="Color.Primary" Class="pa-4"/>
            </PagerContent>
        </MudTable>
    }    
    
}

@code {
    private bool _emptyHistory = true; 
    private bool _loading = true; 
    private IEnumerable<Person> _people;
    private IEnumerable<Project> _projects;
    private IEnumerable<Agreement> _agreements;
    private IEnumerable<Payment> _payment;
    private MudTable<EmployeeHistoryList> _table;
    private IEnumerable<EmployeeHistoryList> _joinTable = new List<EmployeeHistoryList>();
    private CultureInfo _cultureCR = CultureInfo.GetCultureInfo("es-CR");

    [Parameter] public string employerEmail { get; set; }

    protected override async Task OnInitializedAsync()
    {
         _emptyHistory = false;
        _payment = await PaymentService.GetEmployerPayments(employerEmail);

        if(_payment.Length() > 0) 
        {
            _emptyHistory = false;
            _agreements = await AgreementService.GetEmployerAgreements(employerEmail);
            _people = await PersonService.GetAllPeopleAsync();
            _projects = await ProjectService.GetEmployerProyects(employerEmail);
            CreateEmployeeHistory();
        }
        _loading = false;
        await InvokeAsync(StateHasChanged);

    }  
    
    void CreateEmployeeHistory()
    {
        _joinTable = from Pa in _payment
                     join Pe in _people on Pa.EmployeeEmail equals Pe.Email 
                     join P in _projects on Pa.ProjectName equals P.ProjectName
                     join A in _agreements on Pe.Email equals A.EmployeeEmail
                     where P.IsEnabled == 1 && P.EmployerEmail == A.EmployerEmail
                     select new EmployeeHistoryList
                     {
                        ProjectName = P.ProjectName,
                        EmployeeName = Pe.Name,
                        EmployeeLastName1 = Pe.LastName1,
                        EmployeeLastName2 = Pe.LastName2,
                        Ssn = Pe.Ssn,
                        ContractType = A.ContractType,
                        GrossSalary = Pa.GrossSalary
                     };
    }

    private void PageChanged(int i)
    {
        _table.NavigateTo(i - 1);
    }
}