@page "/contracts"

@using Domain.Contracts.DTOs
@using Application.Contracts
@using Domain.Contracts.Entities
@using Presentation.Core.Components

@using Domain.Projects.DTOs
@using Application.Projects
@using Domain.Projects.Entities

@inject IContractService ContractService

<div class="container">
    <h1>Contracts</h1>
    <Loading IsLoading="_isLoading">
        @if (_isLoading)
        {
            <h4 class="text-danger">There are no Contracts currently registered.</h4>
        }
        else
        {
            <table>
                    <tr>
                        <td><strong>Id</strong></td>
                        <td><strong>Project name</strong></td>
                        <td><strong>Number of publications</strong></td>
                        <td><strong>Investigation Group name</strong></td>
                    </tr>

                    @foreach (var project in _projects)
                    {
                        <tr>
                            <td align="center">@project.Id</td>
                            <td align="center">@project.Project_Name</td>
                            <td align="center">@project.Publication</td>
                            <td align="center">@project.Group</td>
                        </tr>
                    }
            </table>
        }
    </Loading>
</div>

@code {

    private bool _isLoading = true;
    private IEnumerable<ProjectDTO> _projects;
    private bool _processing = false;

    async Task ProcessCreation()
    {
        _processing = true;
        await ContractService.CreateContractAsync("myEmail@address.com", "projectEmail@address.com", "NameOfProject", 100, "Type1", "20200520", 5);
        _processing = false;
    }

}
