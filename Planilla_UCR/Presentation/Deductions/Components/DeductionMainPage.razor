@page "/deductions"
@using Domain.Subscriptions.DTOs
@using Application.Subscriptions
@using Domain.Subscriptions.Entities
@using Presentation.Core.Components

@inject ISubscriptionService SubscriptionService


@*<MudTable Items="@Elements.Take(4)" Hover="true" Breakpoint="Breakpoint.Sm" @ref="mudTable" RowClassFunc="@SelectedRowClassFunc" OnRowClick="RowClickEvent" T="SubscriptionDTO">*@

@if (_loading)
{
    <h4 class="text-danger">Loading proyects :)</h4>
}
else
{
    <MudBreadcrumbs Items="_items" Separator=">"></MudBreadcrumbs>
    <MudItem xs="2">
        <MudSelect  @bind-Value="project" Label="Proyecto">
            <MudSelectItem Value="@("Proyecto 1")">Proyecto 1</MudSelectItem>
            <MudSelectItem Value="@("Proyecto 2")">Proyecto 2</MudSelectItem>
        </MudSelect>
    </MudItem>
    @*<MudTable Items="@Elements.Take(4)" Hover="true" Breakpoint="Breakpoint.Sm" Loading="@_loading" LoadingProgressColor="Color.Info">*@
    <MudTable Items="@Elements.Take(4)" Hover="true" Breakpoint="Breakpoint.Sm" @ref="mudTable" RowClassFunc="@SelectedRowClassFunc" OnRowClick="RowClickEvent" T="SubscriptionDTO">
        <HeaderContent>
            <MudTh></MudTh>
            @*<MudTh>Empleador</MudTh>*@
            <MudTh>Nombre</MudTh>
            <MudTh>Descripción</MudTh>
            <MudTh>Costo</MudTh>
        </HeaderContent>
        <RowTemplate>
            <MudTd DataLabel="Type">
                <div class="pic">
                    <img src="@image" asp-append-version="true" style="object-fit: fill;"  width="200" height="150"/>
                </div>
            </MudTd>
            @*<MudTd DataLabel="Empleador">@context.EmployerEmail</MudTd>*@
            <MudTd DataLabel="Nombre">@context.NameSubscription</MudTd>
            <MudTd DataLabel="Descripción">@context.SubscriptionDescription</MudTd>
            <MudTd DataLabel="Costo">@context.Cost</MudTd>
        </RowTemplate>
    </MudTable>
    <MudExpansionPanels Style="flex: 1;">
        <MudExpansionPanel Text="Show inline-clicked event log">
            @foreach (var message in clickedEvents)
            {
                <MudText>@message</MudText>
            }
            @if(clickedEvents.Count > 0) {
                <div class="d-flex">
                    <MudSpacer/>
                    <MudButton Class="mt-3" ButtonType="ButtonType.Button" Variant="Variant.Filled" OnClick="@(() => clickedEvents.Clear())">Clear events</MudButton>
                </div>
            }
        </MudExpansionPanel>
    </MudExpansionPanels>
}


@code {
    private bool _hidePosition;
    private bool _loading = true;
    private int selectedRowNumber = -1;
    private MudTable<SubscriptionDTO> mudTable;
    private List<string> clickedEvents = new();
    private IEnumerable<SubscriptionDTO> Elements;

    public string project { get; set; }

    [Parameter] public string? image { get; set; }
    //[Parameter] public Subscription? _subscription { get; set; }

    private List<BreadcrumbItem> _items = new List<BreadcrumbItem>
    {
        new BreadcrumbItem("Home", href: ""),
        new BreadcrumbItem("Proyectos", href: null, disabled: true),
        new BreadcrumbItem("Nombre", href: null, disabled: true),
        new BreadcrumbItem("Deducciones", href: "deductions"),
    };

    protected override async Task OnInitializedAsync()
    {
        Elements = await SubscriptionService.GetAllSubscriptionsAsync();
        _loading = false;

        image = "./img/default_image.jpg";
    }

    private void RowClickEvent(TableRowClickEventArgs<SubscriptionDTO> tableRowClickEventArgs)
    {
        clickedEvents.Add("Row has been clicked");
    }

    private string SelectedRowClassFunc(SubscriptionDTO element, int rowNumber)
    {
        if (selectedRowNumber == rowNumber)
        {
            selectedRowNumber = -1;
            clickedEvents.Add("Selected Row: None");
            return string.Empty;
        }
        else if (mudTable.SelectedItem != null && mudTable.SelectedItem.Equals(element))
        {
            selectedRowNumber = rowNumber;
            clickedEvents.Add($"Selected Row: {rowNumber}");
            return "selected";
        }
        else
        {
            return string.Empty;
        }
    }
}