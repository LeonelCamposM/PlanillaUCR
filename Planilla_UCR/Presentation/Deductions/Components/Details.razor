@page "/Details/{employerEmail}/{subscriptionName}"

@using Domain.Subscriptions.DTOs
@using Application.Subscriptions
@using Domain.Subscriptions.Entities
@using Presentation.Core.Components

@inject ISubscriptionService SubscriptionService

@if (_loading)
{
    <h4 class="text-danger">Loading proyects :)</h4>
}
else
{
    <MudBreadcrumbs Items="_items" Separator=">"></MudBreadcrumbs>

    <MudCard>
        <MudCardHeader>
            <CardHeaderContent>    
                <MudText Typo="Typo.h6" Align="Align.Center">@subscription.NameSubscription</MudText>
            </CardHeaderContent>
            <CardHeaderAvatar>
                <img src="@image" asp-append-version="true" style="object-fit: fill;"  width="200" height="150"/>
            </CardHeaderAvatar>
            <CardHeaderActions>
                <MudIconButton Icon="@Icons.Material.Filled.Settings" Color="Color.Default" />
            </CardHeaderActions>
        </MudCardHeader>
        <MudCardContent>
            <MudText>Organización:</MudText>
             <MudText Typo="Typo.body2">@subscription.ProviderName</MudText>
            <MudText>Costo: </MudText>
            <MudText Typo="Typo.body2">@subscription.Cost</MudText>
            <MudText>Descripción: </MudText>
            <MudText Typo="Typo.body2">@subscription.SubscriptionDescription</MudText>
        </MudCardContent>
    </MudCard>
}


@code {
    private bool _hidePosition;
    private bool _loading = true;
    private IEnumerable<SubscriptionDTO> Elements;
    public Subscription subscription;

    public string image { get; set; }

    [Parameter] public string employerEmail { get; set; }
    [Parameter] public string subscriptionName { get; set; }

    private List<BreadcrumbItem> _items = new List<BreadcrumbItem>
    {
        new BreadcrumbItem("Home", href: ""),
        new BreadcrumbItem("Proyectos", href: null, disabled: true),
        new BreadcrumbItem("Nombre", href: null, disabled: true),
        new BreadcrumbItem("Deducciones", href: "deductions")
    };

    protected override async Task OnInitializedAsync()
    {
        subscription = await SubscriptionService.GetSubscription(employerEmail, subscriptionName);
        image = "./img/default_image.jpg";
        _loading = false;
    }
}