@page "/Hire_Employees"
@using Application.Employees
@using Domain.Employees.Entities
@using Domain.Employees.DTOs
@using Presentation.Core.Components
@using Presentation.Employer.Components
@inject NavigationManager nav
@inject IEmployeeService EmployeeService

@if (flag)
{
    List<BreadcrumbItem> _items = new List<BreadcrumbItem>
    {
        new BreadcrumbItem("Proyectos", href: "#"),
        new BreadcrumbItem("Empleados", href: "#"),
    };

    <MudBreadcrumbs Items="_items" Separator=">"></MudBreadcrumbs>

    <MudPaper  Height="220px" Width="100%" Outlined="false" Class="border-none pa-4" Elevation="0">
        <MudText Align="Align.Center" Typo="Typo.h6">Contratar empleados</MudText>
        <MudTable @ref="@_table" Items="@_elements" RowsPerPage="5" Hover="true" Breakpoint="Breakpoint.Sm" LoadingProgressColor="Color.Info">
             <HeaderContent>
                    <MudTh>Foto de perfil</MudTh>
                    <MudTh>Nombre</MudTh>
                    <MudTh>Cedula</MudTh>
                    <MudTh></MudTh>
                </HeaderContent>

                <RowTemplate>
                    <MudTd DataLabel="IMG">IMG</MudTd>
                    <MudTd DataLabel="Nombre">@context.Email</MudTd>
                    <MudTd DataLabel="Cedula">Cedula1</MudTd>
                     <MudTd DataLabel="">
                    <MudSpacer></MudSpacer>
                        <MudButton Variant="Variant.Filled" @onclick="@(e => GoToContractEmployee(@context.Email))" Color="Color.Secondary">
                            <MudText>
                            Contratar
                            </MudText> 
                        </MudButton>
                    </MudTd>
                </RowTemplate>
            <PagerContent>
                <MudPagination SelectedChanged="PageChanged" Count="@((_table.GetFilteredItemsCount() + _table.RowsPerPage - 1) / _table.RowsPerPage)" Color="Color.Secondary" Class="pa-4"/>
            </PagerContent>
        </MudTable>
    </MudPaper>
}
else
{
    <HireEmployeesError></HireEmployeesError>
}

@code {
    private bool _hidePosition;
    private bool _loading;
    private bool flag = true;
    string employeeEmail = "";
    private IEnumerable<EmployeeDTO> _elements = new List<EmployeeDTO>();
    private MudTable<EmployeeDTO> _table;

    protected override async Task OnInitializedAsync()
    {
        _elements = await EmployeeService.GetAllEmployeesAsync();
    }

    private void GoToCreateEmployee()
    {
        nav.NavigateTo("/Create_Employee");
    }

    private void GoToContractEmployee(String email)
    {
       nav.NavigateTo("/Contract/"+email);
    }

    private void test(int email)
    {
        nav.NavigateTo("/Contract/"+email);
    }

    private void PageChanged(int i)
    {
        _table.NavigateTo(i - 1);
    }


}
